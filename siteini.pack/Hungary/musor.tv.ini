**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: musor.tv
* @MinSWversion: V1.1.1/51
*   none
* @Revision 5 - [27/2/2014] Francis De Paemeleere
*   fix index_urlshow (sporadic) error
*   remove production year form subtitle
* @Revision 4 - [21/2/2014] Peter Fuzek
*   adjust to site changes
* @Revision 3 - [19/11/2013] Peter Fuzek
*   adjust to site changes + added channel logos
* @Revision 2 - [15/08/2013] Francis De Paemeleere
*   adjust to site changes
* @Revision 1 - [06/06/2012] Jan van Straaten
*   1 improved removal of empty shows in showsplit, index_showsplit loop removes 'two' and 'three' distant entries if equal, index_episode in stead of episode
* @Remarks
* @header_end
**------------------------------------------------------------------------------------------------

site {url=musor.tv|timezone=UTC+01:00|maxdays=5|cultureinfo=hu-HU|charset=UTF-8|titlematchfactor=90}
site {ratingsystem=HU|episodesystem=onscreen}
url_index{url|http://www.musor.tv/napi/tvmusor/|channel|/|urldate}

*http://www.musor.tv/napi/tvmusor/FILMBOXEXTRA/2012.06.01
urldate.format {datestring|yyyy.MM.dd}
index_urlchannellogo.scrub {single|<table class="moredaysprogtable"|<td class="left_stripe" valign="top"><img src="|"|</table>}
index_urlchannellogo.modify {addstart(not="")|http://www.musor.tv}
index_urlchannellogo.modify {remove|_small}
index_showsplit.scrub {multi|<table class="programcelltable">|<td class="dailyprogtimeouter"||<td class="left_stripe">}
index_urlshow {url|http://www.musor.tv/eventinfo/|<a href="javascript:showEvent|(|)|>}
*http://www.musor.tv/pages/eventinfo.php?eventid=4627732
index_start.scrub {single|<td class="dailyprogtime|">|</td>|</tr>}
index_title.scrub {single|<td class="dailyprogtitle|;">|</a>|</td>}
index_subtitle.scrub {single|<td class="dailyprogshortdesc">||</td>}
showicon.scrub {single|<td class="eventinfolongdesc"|img src="|"|</td>}
showicon.modify {addstart(not="")|http://www.musor.tv}

title.scrub {single|<table class="eventinfotitletable">|<td class="eventinfotitle">|</td>|</table>}
description.scrub {multi(separator="<br>" exclude="Rendezte:" "Főszereplők:" "imgdb_image.php" "mainimage.php" "mainimage_small.php" "E-mail")|<td class="eventinfolongdesc"|">|</td>|</td>} 
director.scrub {single(separator="<br>" include="Rendezte:")|<td class="eventinfolongdesc"|">|</td>|</td>} 
actor.scrub {single( separator="<br>" include="Főszereplők:")|<td class="eventinfolongdesc"|">|</td>|</td>} 
rating.scrub {single|<td><span class="nownextrating">|<img src="/images/etc/|.png|</span>|</span>}
category.scrub {single(separator=":""/")|<td class="eventinfocontenttype"|">|</td>|</td>}
starrating.scrub {single|<td><span class="nownextrecommended"|title="|">|</span>|</span>}

index_productiondate.modify {substring(type=regex)|'index_subtitle' "\s*,*\s*([1-2]\d{3})\s*$"}
index_subtitle.modify {remove(type=regex)|'index_subtitle' "\s*,*\s*'index_productiondate'\s*$"} 

scope.range {(showdetails)|end}
titleoriginal.modify {addstart|'description'}
titleoriginal.modify {substring(type=element)|0 8} * only select the first 3 lines to get any original title
titleoriginal.modify {substring(type=regex)|"^[\s]*\((.*)\)[\s]*$"} * the line that starts with ( and ends with ) is the original title
titleoriginal.modify {remove(type=regex)|"(?i)^(txt.*)$"}
titleoriginal.modify {remove(type=regex)|"(?i)^(hd.*)$"}
description.modify {remove(type=regex)|"^([\s]*\(.*\)[\s]*)$"} * remove lines that start with ( and end )
director.modify {remove|Rendezte:}
director.modify {replace|,|\|}
actor.modify {remove|Főszereplők:}
actor.modify {replace|,|\|}
titleoriginal.modify {cleanup(style=name)}
rating.modify {remove|pg_}
rating.modify {addend(not "")|+}
end_scope

**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*index_site_channel.scrub {multi|<table class="channellisttable"|class="channellistentry">|</a>|</table>}
*index_site_id.scrub {multi|<table class="channellisttable"|<a href="/mai/tvmusor/|" class|</table>}
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end