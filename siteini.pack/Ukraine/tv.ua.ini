**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tv.ua
* @MinSWversion: V1.1.1/47
* @Revision 1 - [27/02/2012] Francis De Paemeleere
*   - rename duplicate site_channels (only if there is a unique site_id for it!)
* @Revision 0 - [24/02/2012] Francis De Paemeleere
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------

site {url=tv.ua|timezone=UTC+00:00|maxdays=7|cultureinfo=uk-UA|charset=utf-8|titlematchfactor=90}
url_index{url()|http://www.tv.ua/index.aspx?page_id=2&s=2&rs=1&sp=0&tic=1&ch=|channel|&d=|urldate|}
urldate.format {datestring|dd.MM.yyyy}

index_showsplit.scrub {multi()|<div class="chlist">|<div class="chrow">||<div class="search">}
index_urlshow {url||<div class="chlink|<a  href="|"|</a>}
index_urlchannellogo {url||<div class="channellogo">|<img src='|'|/>}
*
*index_date.scrub {single|}
index_start.scrub {single|<div class="chtime|>|</div>|</div>}
*index_stop.scrub {single|}
index_title.scrub {single|<div class="chlink|>|</a>|</a>} 
index_title.modify {cleanup(tags="<"">")}
*
director.scrub {single(separator=", ")|<b>Режиссер:|>|</p>|</p>}
actor.scrub {single(separator=", ")|<strong>В ролях|>|</p>|</p>} * get the actors (cast)
temp_1.scrub{single(separator=", ")|<b>Актеры:|>|</p>|</p>}      * actors can also be marked with this (actors)
category.scrub {single( separator=",")|<b>Жанр|>|</p>|</p>}
productiondate.scrub {single|<b>Год|>|</p>|</p>}
description.scrub {multi|<div class="anonstext">
description.scrub {multi|<div class="anonscontent">|<div class="anonstext">||<div class="clr"></div>} 
showicon.scrub    {url()||class="chlorimg"|<img src='|'|/>}

scope.range {(showdetails)|end}
director.modify {cleanup(tags="<"">")}
actor.modify {cleanup(tags="<"">")}
temp_1.modify {cleanup(tags="<"">")}
temp_1.modify {replace|, |\|}                * make multi
actor.modify {addend()|'temp_1'}
category.modify {cleanup(tags="<"">")}
productiondate.modify {cleanup(tags="<"">")}
description.modify {cleanup(tags="<"">")}
description.modify {replace| | }
description.modify {cleanup} * remove duplicate spaces, ...
description.modify {remove(separator=", ")|В ролях: 'actor'}
end_scope
*
* operations:

**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*scope.range {(channellist)|end}
*index_site_channel.scrub {multi|Выбрать каналы</option>|<option value|</option>|</div>}
*index_site_id.scrub      {multi|Выбрать каналы</option>|<option value="|"|</div>}
*index_site_channel.modify {cleanup(tags="="">")}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*** make double listed unique (channels with a unique channel_id, but with duplicate names)
*index_temp_1.modify           {calculate(type=element format=F0)|'index_site_id' #}           * how many channels are there
*index_temp_6.modify           {addstart|'index_site_id'}                                      * copy site_id in temp
*index_temp_5.modify           {addstart|'index_site_channel'}                                 * copy site_channel in temp
*index_site_id.modify          {clear}                                                         * remove all site_id
*index_site_channel.modify     {clear}                                                         * remove all site_channel
*loop {('index_temp_1' > "1" max=1000)|end}
*index_temp_1.modify           {calculate(format=F0)|1 -}                                      * decrease the loop counter
*index_temp_3.modify           {substring(type=element)|'index_temp_5' 'index_temp_1' 1}       * site_channel to work on (current)
*index_temp_1.modify           {calculate(format=F0)|1 -}                                      * decrease the loop counter
*index_temp_4.modify           {substring(type=element)|'index_temp_5' 'index_temp_1' 1}       * site_channel to work on (previous)
*index_temp_1.modify           {calculate(format=F0)|1 +}                                      * increase the loop counter
*index_temp_3.modify           {addend('index_temp_3' == 'index_temp_4')|_(2)}                 * add _(2) if it is a duplicate
*index_site_channel.modify     {addstart()|#_#'index_temp_3'}                                  * fill site_channel , add a placeholder #_# as separator
*index_temp_3.modify           {substring(type=element)|'index_temp_6' 'index_temp_1' 1}       * site_id to work on (current)
*index_site_id.modify          {addstart()|#_#'index_temp_3'}                                  * fill site_id      , add a placeholder #_# as separator
*end_loop
*** add the fist channel to the multi list (was not handled in the loop)
*index_temp_3.modify           {substring(type=element)|'index_temp_5' 0 1}                    * site_channel to work on (current)
*index_site_channel.modify     {addstart()|#_#'index_temp_3'}                                  * fill site_channel , add a placeholder #_# as separator
*index_temp_3.modify           {substring(type=element)|'index_temp_6' 0 1}                    * site_id to work on (current)
*index_site_id.modify          {addstart()|#_#'index_temp_3'}                                  * fill site_id      , add a placeholder #_# as separator
*index_site_id.modify {replace|#_#|\|}                                                         * site_id      make multi
*index_site_channel.modify {replace|#_#|\|}                                                    * site_channel make multi
*end_scope
** @auto_xml_channel_end