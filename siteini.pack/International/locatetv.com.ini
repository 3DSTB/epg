**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: locatetv.com
* @MinSWversion: V1.1.1/54.1
* @Revision 7 - [06/12/2014] Ruby
* - fix normal presenter grabbing
* @Revision 6 - [04/12/2014] Francis De Paemeleere
* - remove index_rating
* - fix Correspondent typo
* - remove first show(s). only shows with a proper time are now grabbed
* @Revision 5 - [03/12/2014] Ruby
* - modified index_start (glitch when "to go" "ago" minutes <10), enhanced index_episode, index_subtitle, subdetail Cast & Crew
* @Revision 4 - [30/06/2014] Jan van Straaten
* - added site {nopageoverlap}
* @Revision 3 - [27/06/2014] Jan van Straaten
* - split actor /presenter loop
* @Revision 2 - [26/06/2014] Francis De Paemeleere
* - make .channels.xml generation generic for (US/UK/IE)
* @Revision 1 - [25/06/2014] Jan van Straaten/Hicks
* - update to site
* @Revision 0 - [21/06/2014] Jan van Straaten
* - creation
* @Remarks: readme.txt for customization
* @header_end
**------------------------------------------------------------------------------------------------

site {url=locatetv.com|timezone=US/Eastern|maxdays=12|cultureinfo=en-US|charset=utf-8|titlematchfactor=90|nopageoverlaps|firstshow=1}

url_index{url|http://www.locatetv.com|channel|?offset=|urldate}
urldate.format{daycounter|0}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
url_index.headers {customheader=X-Requested-With=XMLHttpRequest}

index_urlchannellogo {url||<div><img|src="|"|alt=}
scope.range {(datelogo)|end}
index_variable_element.modify {calculate(format=utctime)|'now'}
end_scope

index_showsplit.scrub {regex||<li [^>]*class="time"[^>]*>\d{1,2}:\d{2}(?:am\|pm)</li>.*?</ul>||}
scope.range {(splitindex)|end}
index_showsplit.modify {cleanup(removeduplicates=equal span=1)}                * remove any duplicate show
end_scope

scope.range {(indexshowdetails)|end}
index_start.scrub {regex||<li [^>]*class="time"[^>]*>(\d{1,2}:\d{2}(?:am\|pm))</li>||}
index_showicon.scrub{single|><img src|alt="|"/>|"/>}

***Title:
index_temp_1.scrub {single|<span class="star appendLink">|">|</a>|</a>}
index_temp_2.scrub {single|<span class="star appendLink series">|">|</a>|</a>}
index_title.modify {addstart('index_temp_2'"")|'index_temp_1'}
index_title.modify {addstart('index_temp_2' not"")|'index_temp_2'}
index_temp_1.modify {clear('index_temp_2'"")}
index_temp_2.modify {clear}

***Subtitle:
index_subtitle.modify {addstart|'index_temp_1'}
index_subtitle.modify {clear(~ "Episode")}
index_subtitle.modify {clear(~ "EPISODE: ")}

***Episode:
index_episode.modify  {substring(type=regex)|'index_temp_1' "((?:Season) \s*(?:.*?)\: )"}
index_temp_1.modify   {remove(type=regex)|"((?:Season) \s*(?:.*?)\: )"}
index_episode.modify  {addstart('index_temp_1' ~~ "EPISODE: ")|'index_temp_1'}
index_temp_1.modify   {clear(~~ "EPISODE: ")}
index_episode.modify  {addstart("")|'index_temp_1'}
index_episode.modify  {clear(not ~ "Episode")}
index_temp_1.modify   {clear(~~ "Episode")}
index_subtitle.modify {addstart("")|'index_temp_1'}
index_subtitle.modify {clear(= 'index_episode')}
index_temp_2.modify   {addstart|'index_subtitle'}
index_subtitle.modify {remove(type=regex)|"\A('index_title': )"}
index_episode.modify  {replace(type=regex)|"(?i)season"|S}
index_episode.modify  {replace(type=regex)|"(?i)episode"|E}
index_episode.modify  {remove(type=regex)|[\:\s]}

index_subtitle.modify {addend(not "")|_}
index_subtitle.modify {remove(type=regex)|"(?:,) \s*(?:.*?)(?:\: *(?:.*?)_)"}
index_temp_3.modify   {calculate(type=word format=F0)|'index_subtitle' #}
index_subtitle.modify {remove(type=regex 'index_temp_3' >= "7")|"((?:\:) \s*(?:.*?)_)"}
index_subtitle.modify {remove(type=regex 'index_temp_3' >= "7")|"((?: -) \s*(?:.*?)_)"}
index_subtitle.modify {remove(type=regex 'index_temp_3' >= "6")|"((?:;) \s*(?:.*?)_)"}
index_subtitle.modify {clear('index_temp_3' >= "11")}
index_subtitle.modify {remove|_}

index_temp_2.modify {clear(= 'index_subtitle')}

***index_description.scrub:
index_description.scrub {single|<p>||</p>|</p>}
index_description.modify {remove|</p>}

*
***details and subdetails
*index_urlshow.modify {clear}
*index_urlsubdetail.modify {clear}

*
* if there is a 'star appendLink series'
* get title, desc, cat
* get the urlshow from the 'star appendLink series'
index_urlshow.scrub {single|<span class="star appendLink series">|href="|">|</a>}
index_urlshow.modify {addstart('index_urlshow' not "")|http://www.locatetv.com}
*
* if there is no 'star appendLink series' the details are in the appendLink
* in that case we can clear the index_description because the same is also in the details
* get the urlshow from the 'star appendLink' but only if urlshow is still "" (no appendLink serie)
index_description.modify {clear('index_urlshow' "")}
index_temp_4.scrub {single|<span class="star appendLink">|href="|">|</a>}
index_urlshow.modify {addstart('index_urlshow' "")|http://www.locatetv.com'index_temp_4'}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}
end_scope


*scope.range{(showdetails)|end}

***Category
category.scrub {single|<div class="subtitle clearFix">|<b>|</b>|</p>}

***Productiondate:
temp_1.scrub {single|<p><b>|(|)|</b></p>}      *in Category
productiondate.modify {addstart('temp_1' not"")|'temp_1'}
temp_1.modify {clear}
category.modify {remove('productiondate' not"")| ('productiondate')}
productiondate.modify {replace| - |-}

***Title:
title.scrub {single|<div id="heading">|<h1>|</h1>|</div>}

***Description:
description.scrub {single|<meta property="og:description"|content="|" />|" />}
description.modify {remove|-Soul}
description.modify {addstart|####'index_temp_2'####}
description.modify {replace|####|\|}      * make multi
description.modify {addstart("")|No Info available!}

*
***Actor:
actor.scrub {multi(exclude="Host""Anchor")|<h2>Cast</h2>|</span><a href="/person/|</div>|</ul>}
actor.modify {remove(type=regex)|"\A(.+?/\d{1,}\">)"}
*** role?
*** remove role:
actor.modify {remove(type=regex)|".+?(</a>.*?)\Z"}
actor.modify {cleanup}
*** altenative: add word 'as' between name and role
*actor.modify {replace(type=regex)|"(</a>).+"| as}

*
* the cast is also in a subdetail page, it lists director and producer:
* enable the next two lines to get that
urlsubdetail.modify {addstart('index_urlshow' not "")|'index_urlshow'/cast}
urlsubdetail.headers {customheader=Accept-Encoding=gzip,deflate}
*end_scope

subdetail_temp_1.scrub {multi(excludeblock="Actor")|<h4>Credits</h4>|</span><a href="/person/|</div>|</ul>}
subdetail_temp_1.modify {remove(type=regex)|"\A(.+?/\d{1,}\">)"}

subdetail_director.modify    {substring(type=regex)|'subdetail_temp_1' "\A(.+?)</a> Director"}

subdetail_producer.modify    {substring(type=regex)|'subdetail_temp_1' "\A(.+?)</a> Producer"}
subdetail_temp_2.modify      {substring(type=regex)|'subdetail_temp_1' "\A(.+?)</a> Executive-Producer"}
subdetail_temp_3.modify      {substring(type=regex)|'subdetail_temp_1' "\A(.+?)</a> Creator"}
subdetail_temp_2.modify      {addend(not"")| (Executive-Producer)}
subdetail_temp_3.modify      {addend(not"")| (Creator)}
subdetail_producer.modify    {replace|\||##_##}
subdetail_temp_2.modify      {replace|\||##_##}
subdetail_temp_3.modify      {replace|\||##_##}
subdetail_producer.modify    {addend|##_##'subdetail_temp_2'##_##'subdetail_temp_3'}
subdetail_producer.modify    {replace|##_##|\|}

subdetail_writer.modify    	 {substring(type=regex)|'subdetail_temp_1' "\A(.+?)</a> Editor"}
subdetail_writer.modify      {addend(not"")| (Editor)}

subdetail_presenter.modify 	 {substring(type=regex)|'subdetail_temp_1' "\A(.+?)</a> Host"}
subdetail_temp_2.modify    	 {substring(type=regex)|'subdetail_temp_1' "\A(.+?)</a> Anchor"}
subdetail_temp_3.modify      {substring(type=regex)|'subdetail_temp_1' "\A(.+?)</a> Presenter"}
subdetail_presenter.modify   {addend(not"")| (Host)}
subdetail_temp_2.modify      {addend(not"")| (Anchor)}
subdetail_temp_3.modify      {addend(not"")| (Presenter)}
subdetail_presenter.modify   {replace|\||##_##}
subdetail_temp_2.modify      {replace|\||##_##}
subdetail_temp_3.modify      {replace|\||##_##}
subdetail_presenter.modify   {addend|##_##'subdetail_temp_2'##_##'subdetail_temp_3'}
subdetail_presenter.modify   {replace|##_##|\|}

subdetail_commentator.modify {substring(type=regex)|'subdetail_temp_1' "\A(.+?)</a> Correspondent"}
subdetail_temp_2.modify      {substring(type=regex)|'subdetail_temp_1' "\A(.+?)</a> Narrator"}
subdetail_temp_3.modify      {substring(type=regex)|'subdetail_temp_1' "\A(.+?)</a> Reporter"}
subdetail_temp_2.modify      {addend(not"")| (Correspondent)}
subdetail_temp_2.modify      {addend(not"")| (Narrator)}
subdetail_temp_3.modify      {addend(not"")| (Reporter)}
subdetail_commentator.modify {replace|\||##_##}
subdetail_temp_2.modify      {replace|\||##_##}
subdetail_temp_3.modify      {replace|\||##_##}
subdetail_commentator.modify {addend|##_##'subdetail_temp_2'##_##'subdetail_temp_3'}
subdetail_commentator.modify {replace|##_##|\|}

subdetail_director.modify    {cleanup}
subdetail_producer.modify    {cleanup}
subdetail_presenter.modify   {cleanup}
subdetail_commentator.modify {cleanup}

subdetail_director.modify    {cleanup(removeduplicates)}
subdetail_producer.modify    {cleanup(removeduplicates)}
subdetail_writer.modify      {cleanup(removeduplicates)}
subdetail_presenter.modify   {cleanup(removeduplicates)}
subdetail_commentator.modify {cleanup(removeduplicates)}

*
** actor is already in the detail page, but just in case:
*subdetail_actor.scrub {multi|<h2>Cast</h2>|</span><a href="/person/|</div>|</ul>}
*subdetail_actor.modify {remove(type=regex)|"\A(.+?/\d{1,}\">)"}
*subdetail_actor.modify {cleanup(tags="<"">")}
*subdetail_actor.modify {substring(type=element)|0 12} * limits to 12 actors
*subdetail_actor.modify {substring(type=regex)|"\A(.+?) as "} * optional removal of role


**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the locate.channel.xml file)
**
** @auto_xml_channel_start
*site {loadcookie=locatetv.com_cookies.txt}
*subpage.format{list(format=F0 step=1 count=25)|1}
*url_index {url|http://www.locatetv.com/listings/?start=&page=|subpage}
*index_site_channel.scrub {regex||<li [^>]*class="channel"[^>]*data-name="([^>]*)">||}
*index_site_id.scrub {regex||<li [^>]*class="channel".*?<a href="([^"]*)"||}
*
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*index_site_channel.modify {remove(type=regex)|\s*\(\s*Ch\s*\d*\s*\)$}
*end_scope
** @auto_xml_channel_end
