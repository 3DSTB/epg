**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: radiotimes.com
* @MinSWversion: V1.1.1/55
*   none
* @Revision 13 - [11/11/2015] Jan van Straaten
*	- firstshow no longer required (starttime with date)
*	- added gzip headers
* @Revision 12 - [21/10/2015] Jan van Straaten
*   - new start and stoptime (inc date)
*   - another new channellist! (site change again!)
* @Revision 11 - [03/09/2015] Francis De Paemeleere
*   - make channel list file creation more robust
*   - fix title/subtitle grabbing
* @Revision 10 - [26/08/2015] Jan van Straaten
*   corrected channel list file creation for site change
* @Revision 9 - [03/12/2013] Jan van Straaten
*   remove duplicate entries in showsplit
* @Revision 8 - [16/09/2013] Francis De Paemeleere
*   adapt to site changes
*   add full automatic .channels.xml generation
* @Revision 7 - [05/09/2012] Jan van Straaten /Willy de wilde
*   urlindex needs channels=
* @Revision 6 - []
*   showsplit
* @Revision 5 - []
*   improved episode and category
* @Revision 4 - []
*   completely new, site change
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------

site {url=radiotimes.com|timezone=Europe/London|maxdays=14|cultureinfo=en-GB|charset=UTF-8|titlematchfactor=90}
site {episodesystem=onscreen}
url_index{url|http://www.radiotimes.com/rt-service/schedule/get?startDate=|urldate|%2000:00:00&hours=24&totalWidthUnits=0&channels=|channel}
*http://www.radiotimes.com/rt-service/schedule/get?startDate=05-09-2012 00:00:00&hours=24&totalWidthUnits=0&channels=94
urldate.format {datestring|dd-MM-yyyy}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}* to speedup the downloading of the index pages
index_showsplit.scrub {regex||TvListings"\:\[(\{.*?\}[,]{0,1})*\]||}
*
* remove duplicates in showsplit:
scope.range {(splitindex)|end}
*index_showsplit.modify {addstart|}
index_temp_1.modify {substring(type=regex)|'index_showsplit' ".+\"EndTimeMF\":(.+)\"EpisodeId\""}
index_temp_1.modify {cleanup(removeduplicates=equal,70 link="index_showsplit")}
end_scope
*index_showsplit.modify {addstart|}

index_urlshow {url|http://www.radiotimes.com|"Link":"||","|","}
index_urlshow.headers 	  {customheader=Accept-Encoding=gzip,deflate}* to speedup the downloading of the index pages
*"EndTimeMF":"2015-10-22 00:00:00Z","StartTimeMF":"2015-10-21 23:30:00Z","
* notice that while the times are indicated with Z they are in fact in UK DST time
* so we use timezone=Europe/London

index_start.scrub {regex||"StartTimeMF":"(\d{4}-\d{1,2}-\d{1,2} \d{2}:\d{2}:00)Z","||}
index_stop.scrub  {regex||"EndTimeMF":"(\d{4}-\d{1,2}-\d{1,2} \d{2}:\d{2}:00)Z","||}
*index_start.scrub {single|"StartTime":|"|",|}
*index_stop.scrub  {single|"EndTime":|"|",|}
index_title.scrub {single|"Title":"||","|","}
index_description.scrub {single|"Description":"||","|","}
index_starrating.scrub {single|"FilmStarRating":||,"|,"}
index_category.scrub {single|"Specialisation":"||","|","}

title.scrub {regex||<h1 itemprop="name">(.*?)</h1>||}
subtitle.scrub {single|<header>|<p class="episode-title">|</p>|</header}
description.scrub {single|<section class="about">|<p>|</p>|</section>}
actor.scrub {multi(exclude="Presenter""Host")|<section class="cast">|<dt>|</dd>|</dl>}
director.scrub {multi|<dt itemprop="jobTitle">Director</dt>|<dd itemprop="name">|</dd>|</section>}
producer.scrub {multi|<dt itemprop="jobTitle">Executive Producer</dt>|<dd itemprop="name">|</dd>|</section>}
temp_2.scrub {multi|<dt itemprop="jobTitle">Series Producer</dt>|<dd itemprop="name">|</dd>|</section>} *other producer?
writer.scrub {multi|<dt itemprop="jobTitle">Writer</dt>|<dd itemprop="name">|</dd>|</section>}
presenter.scrub {multi|<dt>Presenter</dt>|<dd itemprop="name">|</dd>|</span>}
presenter.scrub {multi|<dt>Host</dt>|<dd itemprop="name">|</dd>|</span>}
episode.scrub {single(separator=". " include=first)|<p class="episode-title">||</p>|</header>}
category.scrub {multi(exclude="<a href=")|<dt>Categories</dt>|<dd>|</dd>|</dl>}
category.scrub {multi|<dt>Categories</dt>|">|</a>|</dl>}
rating.scrub {single|<dd id="certificate"|">|</dd>|</dd>}
productiondate.scrub {single|<dt class="director_year">||</dt>|</dt>}
starrating.scrub {single|<dt>Buzz</dt>||</dd>|</dd>}

index_starrating.modify {remove|null}
index_category.modify {remove|tv}
index_category.modify {remove|radio}

title.modify {remove(type=regex)|<[^>]*>}
actor.modify {replace|<dd itemprop="name">|: }
actor.modify {cleanup}
producer.modify {addend(not ~ 'temp_2')|\|'temp_2'}
description.modify {cleanup}
* remove episode if just todays date:
temp_1.modify {calculate(format=date,dd/MM/yyyy)|'now'}
episode.modify {remove|'temp_1'}
subtitle.modify {remove|'temp_1'}
subtitle.modify {remove|'episode'}
subtitle.modify {remove(type=regex)|^\s*\.*\s*}

**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*subpage.format {list|platformmainchannels?specialisation=tv|nommainplatformchannels?specialisation=tv|platformmainchannels?specialisation=radio|nonmainplatformchannels?specialisation=radio}
*url_index {url|http://www.radiotimes.com/rt-service/personalisation/get|subpage|&platform=Popular channels}
*
*index_site_id.scrub {regex||"Id":(\d*?),||}
*index_site_channel.scrub {regex||"DisplayValue":"(.*?)"||}
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
* the four url's for the channels:
*http://www.radiotimes.com/rt-service/personalisation/getplatformmainchannels?specialisation=tv&platform=Popular channels
*http://www.radiotimes.com/rt-service/personalisation/getnonmainplatformchannels?specialisation=tv&platform=Popular channels
*http://www.radiotimes.com/rt-service/personalisation/getplatformmainchannels?specialisation=radio&platform=Popular channels
*http://www.radiotimes.com/rt-service/personalisation/getnonmainplatformchannels?specialisation=radio&platform=Popular channels
